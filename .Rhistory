geom_vline(xintercept = 90, linetype = "dotted", color = "gray", size = 0.5) +
geom_vline(xintercept = 105, linetype = "dotted", color = "gray", size = 0.5) +
labs(x = "Spielminute",
y = "kumulative xG",
title = glue::glue("xG-Entwicklung und Shotmaps: <b style = 'color:#ff0000'>England</b> - <b style = 'color:#999999'>Deutschland</b> (4 - 2 n.V.)"),
subtitle = glue::glue("Finale WM 1966: Wembley (London), 30. Juli 1966, <b>xG: 1.91 - 1.47</b>")) +
theme(axis.title.x = element_blank(), axis.title.y = element_blank()) +
theme(legend.position = 'none', plot.title = element_markdown(), plot.subtitle = element_markdown())
xg_timeline / (shotmap_en + shotmap_de)
View(shots_de)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
library(tidyverse) # dataframe manipulation
library(dbplyr) # database access
library(DBI) # database access
library(r2d3) # evaluate D3 directly from R
library(viridis) # color scheme for pass polar
library(cowplot) # plotting the player portrait
library(broom) # getting kmeans results
library(patchwork) # combining plots
library(ggrepel) # pretty labels for scatter plot
library(r2d3) # d3 support
source("../data/pitch_plot.r")
library(tidyverse) # dataframe manipulation
library(dbplyr) # database access
library(DBI) # database access
library(r2d3) # evaluate D3 directly from R
library(viridis) # color scheme for pass polar
library(cowplot) # plotting the player portrait
library(broom) # getting kmeans results
library(patchwork) # combining plots
library(ggrepel) # pretty labels for scatter plot
library(r2d3) # d3 support
source("~/Douments/GitHub/keine-mathematik/content/data/pitch_plot.r")
library(tidyverse) # dataframe manipulation
library(dbplyr) # database access
library(DBI) # database access
library(r2d3) # evaluate D3 directly from R
library(viridis) # color scheme for pass polar
library(cowplot) # plotting the player portrait
library(broom) # getting kmeans results
library(patchwork) # combining plots
library(ggrepel) # pretty labels for scatter plot
library(r2d3) # d3 support
source("~/Documents/GitHub/keine-mathematik/content/data/pitch_plot.r")
con <- DBI::dbConnect(RSQLite::SQLite(), dbname = "~/Documents/Blog/Data/data.sqlite")
match_ids <- tbl(con, "matches") %>%
filter(league == "Germany") %>%
filter(season == "2013/2014") %>%
filter(home_team_id == 37 || away_team_id == 37) %>%
select(match_id) %>%
collect()
DBI::dbDisconnect(con)
con <- DBI::dbConnect(RSQLite::SQLite(), dbname = "~/Documents/Blog/Data/data.sqlite")
passes <- tbl(con, "events") %>%
filter(match_id %in% match_ids) %>%
filter(isTouch == 1) %>%
collect()
con <- DBI::dbConnect(RSQLite::SQLite(), dbname = "~/Documents/Blog/Data/data.sqlite")
passes <- tbl(con, "events") %>%
filter(match_id in match_ids) %>%
con <- DBI::dbConnect(RSQLite::SQLite(), dbname = "~/Documents/Blog/Data/data.sqlite")
passes <- tbl(con, "events") %>%
filter(match_id %in% match_ids) %>%
filter(isTouch == 1) %>%
collect()
match_ids <- match_ids[, 1]
match_ids <- match_ids$match_id
con <- DBI::dbConnect(RSQLite::SQLite(), dbname = "~/Documents/Blog/Data/data.sqlite")
passes <- tbl(con, "events") %>%
filter(match_id %in% match_ids) %>%
filter(isTouch == 1) %>%
collect()
DBI::dbDisconnect(con)
View(passes)
con <- DBI::dbConnect(RSQLite::SQLite(), dbname = "~/Documents/Blog/Data/data.sqlite")
passes <- tbl(con, "events") %>%
filter(match_id %in% match_ids) %>%
filter(teamId == 37) %>%
filter(isTouch == 1) %>%
collect()
DBI::dbDisconnect(con)
passes_agg <- passes %>%
group_by(playerId) %>%
summarize(location_x = mean(location_x)
passes_agg <- passes %>%
group_by(playerId) %>%
summarize(location_x = mean(location_x))
View(passes_agg)
passes_agg <- passes %>%
group_by(playerId) %>%
summarize(location_x = mean(location_x),
location_y = mean(location_y),
count = n(),
.groups = "drop_last")
View(passes_agg)
View(passes_agg)
source("~/Documents/GitHub/keine-mathematik/content/data/standardize_coordinates.r")
passes <- standardize_coordinates(passes, "opta")
passes <- passes %>%
mutate(PassEndX = as.numeric(PassEndX), PassEndY = as.numeric(PassEndY),
BlockedX = as.numeric(BlockedX), BlockedY = as.numeric(BlockedY),
GoalMouthY = as.numeric(GoalMouthY), GoalMouthZ = as.numeric(GoalMouthZ)) %>%
standardize_coordinates(passes, "opta")
passes <- passes %>%
mutate(PassEndX = as.numeric(PassEndX), PassEndY = as.numeric(PassEndY),
BlockedX = as.numeric(BlockedX), BlockedY = as.numeric(BlockedY),
GoalMouthY = as.numeric(GoalMouthY), GoalMouthZ = as.numeric(GoalMouthZ)) %>%
standardize_coordinates(passes, "Opta")
passes <- passes %>%
mutate(PassEndX = as.numeric(PassEndX), PassEndY = as.numeric(PassEndY),
BlockedX = as.numeric(BlockedX), BlockedY = as.numeric(BlockedY),
GoalMouthY = as.numeric(GoalMouthY), GoalMouthZ = as.numeric(GoalMouthZ)) %>%
standardize_coordinates(passes, provider = "Opta")
passes <- passes %>%
mutate(PassEndX = as.numeric(PassEndX), PassEndY = as.numeric(PassEndY),
BlockedX = as.numeric(BlockedX), BlockedY = as.numeric(BlockedY),
GoalMouthY = as.numeric(GoalMouthY), GoalMouthZ = as.numeric(GoalMouthZ)) %>%
standardize_coordinates(passes, provider = 'opta')
passes <- passes %>%
mutate(PassEndX = as.numeric(PassEndX), PassEndY = as.numeric(PassEndY),
BlockedX = as.numeric(BlockedX), BlockedY = as.numeric(BlockedY),
GoalMouthY = as.numeric(GoalMouthY), GoalMouthZ = as.numeric(GoalMouthZ)) %>%
standardize_opta_x(passes)
con <- DBI::dbConnect(RSQLite::SQLite(), dbname = "~/Documents/Blog/Data/data.sqlite")
match_ids <- tbl(con, "matches") %>%
filter(league == "Germany") %>%
filter(season == "2013/2014") %>%
filter(home_team_id == 37 || away_team_id == 37) %>%
select(match_id) %>%
collect()
DBI::dbDisconnect(con)
match_ids <- match_ids$match_id
con <- DBI::dbConnect(RSQLite::SQLite(), dbname = "~/Documents/Blog/Data/data.sqlite")
passes <- tbl(con, "events") %>%
filter(match_id %in% match_ids) %>%
filter(teamId == 37) %>%
filter(isTouch == 1) %>%
collect()
DBI::dbDisconnect(con)
passes_standardized <- passes %>%
mutate(PassEndX = as.numeric(PassEndX), PassEndY = as.numeric(PassEndY),
BlockedX = as.numeric(BlockedX), BlockedY = as.numeric(BlockedY),
GoalMouthY = as.numeric(GoalMouthY), GoalMouthZ = as.numeric(GoalMouthZ)) %>%
standardize_coordinates(passes, provider = 'opta')
source("~/Documents/GitHub/keine-mathematik/content/data/standardize_coordinates.r")
passes_standardized <- passes %>%
mutate(PassEndX = as.numeric(PassEndX), PassEndY = as.numeric(PassEndY),
BlockedX = as.numeric(BlockedX), BlockedY = as.numeric(BlockedY),
GoalMouthY = as.numeric(GoalMouthY), GoalMouthZ = as.numeric(GoalMouthZ)) %>%
standardize_coordinates(passes, provider = 'opta')
passes_standardized <- passes %>%
mutate(PassEndX = as.numeric(PassEndX), PassEndY = as.numeric(PassEndY),
BlockedX = as.numeric(BlockedX), BlockedY = as.numeric(BlockedY),
GoalMouthY = as.numeric(GoalMouthY), GoalMouthZ = as.numeric(GoalMouthZ)) %>%
standardize_opta_x(passes)
passes_standardized <- passes %>%
mutate(PassEndX = as.numeric(PassEndX), PassEndY = as.numeric(PassEndY),
BlockedX = as.numeric(BlockedX), BlockedY = as.numeric(BlockedY),
GoalMouthY = as.numeric(GoalMouthY), GoalMouthZ = as.numeric(GoalMouthZ))
View(passes_standardized)
source("~/Documents/GitHub/keine-mathematik/content/data/standardize_coordinates.r")
passes_standardized <- passes %>%
mutate(PassEndX = as.numeric(PassEndX), PassEndY = as.numeric(PassEndY),
BlockedX = as.numeric(BlockedX), BlockedY = as.numeric(BlockedY),
GoalMouthY = as.numeric(GoalMouthY), GoalMouthZ = as.numeric(GoalMouthZ)) %>%
standardize_opta_x(passes)
View(standardize_opta_x)
passes_standardized <- passes %>%
mutate(PassEndX = as.numeric(PassEndX), PassEndY = as.numeric(PassEndY),
BlockedX = as.numeric(BlockedX), BlockedY = as.numeric(BlockedY),
GoalMouthY = as.numeric(GoalMouthY), GoalMouthZ = as.numeric(GoalMouthZ)) %>%
standardize_opta_x(passes, cols = c("location_x", "PassEndX", "BlockedX"))
passes_standardized <- passes %>%
mutate(PassEndX = as.numeric(PassEndX), PassEndY = as.numeric(PassEndY),
BlockedX = as.numeric(BlockedX), BlockedY = as.numeric(BlockedY),
GoalMouthY = as.numeric(GoalMouthY), GoalMouthZ = as.numeric(GoalMouthZ)) %>%
standardize_coordinates(passes, provider = "opta")
View(standardize_coordinates)
View(standardize_coordinates)
cols = c("location_x", "PassEndX", "BlockedX")
passes_standardized <- passes %>%
mutate(PassEndX = as.numeric(PassEndX), PassEndY = as.numeric(PassEndY),
BlockedX = as.numeric(BlockedX), BlockedY = as.numeric(BlockedY),
GoalMouthY = as.numeric(GoalMouthY), GoalMouthZ = as.numeric(GoalMouthZ)) %>%
mutate_at(cols, ~ case_when(
abs(. - 50) <= 33 ~ (. - 50) * (105 - 16.5 - 52.5) / (83 - 50) + 52.5, # space between 18 yard boxes
abs(. - 50) > 33 & abs(. - 50) <= 38.5 ~ (. - 50) * (105 - 10.97 - 52.5) / (88.5 - 50) + 52.5, # spaces between 18 yard box and penalty spot
abs(. - 50) > 38.5 & abs(. - 50) <= 44.2 ~ (. - 50) * (105 - 5.5 - 52.5) / (94.2 - 50) + 52.5, # spaces between penalty spot and 6 yard box
abs(. - 50) > 44.2 & abs(. - 50) <= 50 ~ (. - 50) * (105 - 52.5) / (100 - 50) + 52.5 # spaces between 6 yard box and goal line
))
passes_standardized <- passes %>%
mutate(PassEndX = as.numeric(PassEndX), PassEndY = as.numeric(PassEndY),
BlockedX = as.numeric(BlockedX), BlockedY = as.numeric(BlockedY),
GoalMouthY = as.numeric(GoalMouthY), GoalMouthZ = as.numeric(GoalMouthZ)) %>%
standardize_opta_x(passes, cols = c("location_x", "PassEndX", "BlockedX"))
cols = c("location_x", "PassEndX", "BlockedX")
passes_standardized <- passes %>%
mutate(PassEndX = as.numeric(PassEndX), PassEndY = as.numeric(PassEndY),
BlockedX = as.numeric(BlockedX), BlockedY = as.numeric(BlockedY),
GoalMouthY = as.numeric(GoalMouthY), GoalMouthZ = as.numeric(GoalMouthZ)) %>%
mutate_at(cols, ~ case_when(
abs(. - 50) <= 33 ~ (. - 50) * (105 - 16.5 - 52.5) / (83 - 50) + 52.5, # space between 18 yard boxes
abs(. - 50) > 33 & abs(. - 50) <= 38.5 ~ (. - 50) * (105 - 10.97 - 52.5) / (88.5 - 50) + 52.5, # spaces between 18 yard box and penalty spot
abs(. - 50) > 38.5 & abs(. - 50) <= 44.2 ~ (. - 50) * (105 - 5.5 - 52.5) / (94.2 - 50) + 52.5, # spaces between penalty spot and 6 yard box
abs(. - 50) > 44.2 & abs(. - 50) <= 50 ~ (. - 50) * (105 - 52.5) / (100 - 50) + 52.5 # spaces between 6 yard box and goal line
))
View(passes_standardized)
passes_standardized <- passes %>%
mutate(PassEndX = as.numeric(PassEndX), PassEndY = as.numeric(PassEndY),
BlockedX = as.numeric(BlockedX), BlockedY = as.numeric(BlockedY),
GoalMouthY = as.numeric(GoalMouthY), GoalMouthZ = as.numeric(GoalMouthZ)) %>%
standardize_coordinates(passes, cols = c("location_x", "PassEndX", "BlockedX"), unit = "meters")
passes_standardized <- passes %>%
mutate(PassEndX = as.numeric(PassEndX), PassEndY = as.numeric(PassEndY),
BlockedX = as.numeric(BlockedX), BlockedY = as.numeric(BlockedY),
GoalMouthY = as.numeric(GoalMouthY), GoalMouthZ = as.numeric(GoalMouthZ)) %>%
standardize_opta_x(passes, cols = c("location_x", "PassEndX", "BlockedX"), unit = "meters")
passes_standardized <- passes %>%
mutate(PassEndX = as.numeric(PassEndX), PassEndY = as.numeric(PassEndY),
BlockedX = as.numeric(BlockedX), BlockedY = as.numeric(BlockedY),
GoalMouthY = as.numeric(GoalMouthY), GoalMouthZ = as.numeric(GoalMouthZ)) %>%
standardize_opta_x(cols = c("location_x", "PassEndX", "BlockedX"), unit = "meters")
passes_standardized <- passes %>%
mutate(PassEndX = as.numeric(PassEndX), PassEndY = as.numeric(PassEndY),
BlockedX = as.numeric(BlockedX), BlockedY = as.numeric(BlockedY),
GoalMouthY = as.numeric(GoalMouthY), GoalMouthZ = as.numeric(GoalMouthZ)) %>%
standardize_coordinates(provider = 'opta')
passes_agg <- passes %>%
group_by(playerId) %>%
summarize(location_x = mean(location_x),
location_y = mean(location_y),
count = n(),
.groups = "drop_last")
View(passes_agg)
View(passes_standardized)
passes_agg <- passes %>%
group_by(playerId) %>%
summarize(location_x = mean(location_x),
location_y = mean(location_y),
count = n(),
.groups = "drop_last") %>%
arrange(count) %>%
head(11)
View(passes_agg)
passes_agg <- passes %>%
group_by(playerId) %>%
summarize(location_x = mean(location_x),
location_y = mean(location_y),
count = n(),
.groups = "drop_last") %>%
arrange(desc(count)) %>%
head(11)
passes_agg <- passes %>%
group_by(playerId) %>%
summarize(location_x = mean(location_x),
location_y = mean(location_y),
location_x_demeaned = mean(abs(location_x - 52.5)),
location_y_demeaned = mean(abs(location_y - 34)),
count = n(),
.groups = "drop_last") %>%
arrange(desc(count)) %>%
head(11)
View(passes_agg)
passes_agg <- passes %>%
group_by(playerId) %>%
summarize(location_x = mean(location_x),
location_y = mean(location_y),
location_x_demeaned = mean(location_x - 52.5),
location_y_demeaned = mean(abs(location_y - 34)),
count = n(),
.groups = "drop_last") %>%
arrange(desc(count)) %>%
head(11)
passes_agg <- passes_standardized %>%
group_by(playerId) %>%
summarize(location_x = mean(location_x),
location_y = mean(location_y),
location_x_demeaned = mean(location_x - 52.5),
location_y_demeaned = mean(abs(location_y - 34)),
count = n(),
.groups = "drop_last") %>%
arrange(desc(count)) %>%
head(11)
View(plot_pitch)
plot_pitch(direction_arrow = TRUE) +
geom_point(data = passes_agg, aes(x = location_x, y = location_y))
con <- DBI::dbConnect(RSQLite::SQLite(), dbname = "~/Documents/Blog/Data/data.sqlite")
match_ids <- tbl(con, "matches") %>%
filter(league == "Germany") %>%
filter(season == "2009/2010") %>%
filter(home_team_id == 37 || away_team_id == 37) %>%
select(match_id) %>%
collect()
DBI::dbDisconnect(con)
match_ids <- match_ids$match_id
con <- DBI::dbConnect(RSQLite::SQLite(), dbname = "~/Documents/Blog/Data/data.sqlite")
passes <- tbl(con, "events") %>%
filter(match_id %in% match_ids) %>%
filter(teamId == 37) %>%
filter(isTouch == 1) %>%
collect()
DBI::dbDisconnect(con)
passes_standardized <- passes %>%
mutate(PassEndX = as.numeric(PassEndX), PassEndY = as.numeric(PassEndY),
BlockedX = as.numeric(BlockedX), BlockedY = as.numeric(BlockedY),
GoalMouthY = as.numeric(GoalMouthY), GoalMouthZ = as.numeric(GoalMouthZ)) %>%
standardize_coordinates(provider = 'opta')
passes_agg <- passes_standardized %>%
group_by(playerId) %>%
summarize(location_x = mean(location_x),
location_y = mean(location_y),
location_x_demeaned = mean(location_x - 52.5),
location_y_demeaned = mean(abs(location_y - 34)),
count = n(),
.groups = "drop_last") %>%
arrange(desc(count)) %>%
head(11)
plot_pitch(direction_arrow = TRUE) +
geom_point(data = passes_agg, aes(x = location_x, y = location_y))
plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg, aes(x = location_x, y = location_y))
con <- DBI::dbConnect(RSQLite::SQLite(), dbname = "~/Documents/Blog/Data/data.sqlite")
match_ids <- tbl(con, "matches") %>%
filter(league == "Germany") %>%
#filter(season == "2009/2010") %>%
filter(home_team_id == 37 || away_team_id == 37) %>%
select(match_id) %>%
collect()
DBI::dbDisconnect(con)
match_ids <- match_ids$match_id
con <- DBI::dbConnect(RSQLite::SQLite(), dbname = "~/Documents/Blog/Data/data.sqlite")
passes <- tbl(con, "events") %>%
filter(match_id %in% match_ids) %>%
filter(teamId == 37) %>%
filter(isTouch == 1) %>%
collect()
DBI::dbDisconnect(con)
con <- DBI::dbConnect(RSQLite::SQLite(), dbname = "~/Documents/Blog/Data/data.sqlite")
matches <- tbl(con, "matches") %>%
filter(league == "Germany") %>%
#filter(season == "2009/2010") %>%
filter(home_team_id == 37 || away_team_id == 37) %>%
select(match_id, season) %>%
collect()
DBI::dbDisconnect(con)
match_ids <- matches$match_id
con <- DBI::dbConnect(RSQLite::SQLite(), dbname = "~/Documents/Blog/Data/data.sqlite")
passes <- tbl(con, "events") %>%
filter(match_id %in% match_ids) %>%
filter(teamId == 37) %>%
filter(isTouch == 1) %>%
collect()
DBI::dbDisconnect(con)
passes <- left_join(passes, matches, by = ["match_id"])
passes <- left_join(passes, matches, by = c("match_id"))
View(passes)
passes_standardized <- passes %>%
mutate(PassEndX = as.numeric(PassEndX), PassEndY = as.numeric(PassEndY),
BlockedX = as.numeric(BlockedX), BlockedY = as.numeric(BlockedY),
GoalMouthY = as.numeric(GoalMouthY), GoalMouthZ = as.numeric(GoalMouthZ)) %>%
standardize_coordinates(provider = 'opta')
passes_agg <- passes_standardized %>%
group_by(season, playerId) %>%
summarize(location_x = mean(location_x),
location_y = mean(location_y),
location_x_demeaned = mean(location_x - 52.5),
location_y_demeaned = mean(abs(location_y - 34)),
count = n(),
.groups = "drop_last") %>%
arrange(desc(count)) %>%
head(11)
passes_agg <- passes_standardized %>%
group_by(season, playerId) %>%
summarize(location_x = mean(location_x),
location_y = mean(location_y),
location_x_demeaned = mean(location_x - 52.5),
location_y_demeaned = mean(abs(location_y - 34)),
count = n(),
.groups = "drop_last") %>%
arrange(desc(count))
View(passes_agg)
passes_agg <- passes_standardized %>%
group_by(season, playerId) %>%
summarize(location_x = mean(location_x),
location_y = mean(location_y),
location_x_demeaned = mean(location_x - 52.5),
location_y_demeaned = mean(abs(location_y - 34)),
count = n(),
.groups = "drop_last") %>%
arrange(desc(count)) %>%
group_by(season) %>%
top_n(n=11)
View(passes_agg)
passes_agg <- passes_standardized %>%
group_by(season, playerId) %>%
summarize(location_x = mean(location_x),
location_y = mean(location_y),
location_x_demeaned = mean(location_x - 52.5),
location_y_demeaned = mean(abs(location_y - 34)),
count = n(),
.groups = "drop_last") %>%
group_by(season) %>%
slice_max(order_by = "count", n=11)
View(passes_agg)
passes_agg <- passes_standardized %>%
group_by(season, playerId) %>%
summarize(location_x = mean(location_x),
location_y = mean(location_y),
location_x_demeaned = mean(location_x - 52.5),
location_y_demeaned = mean(abs(location_y - 34)),
count = n(),
.groups = "drop_last") %>%
group_by(season) %>%
slice_max(order_by = count, n = 11)
View(passes_agg)
plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg %>% filter(season = "2009/2010"), aes(x = location_x, y = location_y))
plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg %>% filter(season == "2009/2010"), aes(x = location_x, y = location_y))
p_2010 <- plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg %>% filter(season == "2009/2010"), aes(x = location_x, y = location_y))
p_2011 <- plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg %>% filter(season == "2010/2011"), aes(x = location_x, y = location_y))
p_2012 <- plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg %>% filter(season == "2011/2012"), aes(x = location_x, y = location_y))
(p_2010 + p_2011 + p_2012)
p_2010 <- plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg %>% filter(season == "2009/2010"), aes(x = location_x, y = location_y))
p_2011 <- plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg %>% filter(season == "2010/2011"), aes(x = location_x, y = location_y))
p_2012 <- plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg %>% filter(season == "2011/2012"), aes(x = location_x, y = location_y))
p_2013 <- plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg %>% filter(season == "2012/2013"), aes(x = location_x, y = location_y))
p_2014 <- plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg %>% filter(season == "2013/2014"), aes(x = location_x, y = location_y))
p_2015 <- plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg %>% filter(season == "2014/2015"), aes(x = location_x, y = location_y))
p_2016 <- plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg %>% filter(season == "2015/2016"), aes(x = location_x, y = location_y))
p_2017 <- plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg %>% filter(season == "2016/2017"), aes(x = location_x, y = location_y))
p_2018 <- plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg %>% filter(season == "2017/2018"), aes(x = location_x, y = location_y))
(p_2010 + p_2011 + p_2012)  / (p_2013 + p_2014 + p_2015)  / (p_2016 + p_2017 + p_2017)
p_2010 <- plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg %>% filter(season == "2009/2010"), aes(x = location_x, y = location_y))
p_2011 <- plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg %>% filter(season == "2010/2011"), aes(x = location_x, y = location_y))
p_2012 <- plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg %>% filter(season == "2011/2012"), aes(x = location_x, y = location_y))
p_2013 <- plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg %>% filter(season == "2012/2013"), aes(x = location_x, y = location_y))
p_2014 <- plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg %>% filter(season == "2013/2014"), aes(x = location_x, y = location_y))
p_2015 <- plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg %>% filter(season == "2014/2015"), aes(x = location_x, y = location_y))
p_2016 <- plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg %>% filter(season == "2015/2016"), aes(x = location_x, y = location_y))
p_2017 <- plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg %>% filter(season == "2016/2017"), aes(x = location_x, y = location_y))
p_2018 <- plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg %>% filter(season == "2017/2018"), aes(x = location_x, y = location_y))
(p_2010 + p_2011 + p_2012)  / (p_2013 + p_2014 + p_2015)  / (p_2016 + p_2017 + p_2017)
p_2010 <- plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg %>% filter(season == "2009/2010"), aes(x = location_x, y = location_y))
p_2011 <- plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg %>% filter(season == "2010/2011"), aes(x = location_x, y = location_y))
p_2012 <- plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg %>% filter(season == "2011/2012"), aes(x = location_x, y = location_y))
p_2013 <- plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg %>% filter(season == "2012/2013"), aes(x = location_x, y = location_y))
p_2014 <- plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg %>% filter(season == "2013/2014"), aes(x = location_x, y = location_y))
p_2015 <- plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg %>% filter(season == "2014/2015"), aes(x = location_x, y = location_y))
p_2016 <- plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg %>% filter(season == "2015/2016"), aes(x = location_x, y = location_y))
p_2017 <- plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg %>% filter(season == "2016/2017"), aes(x = location_x, y = location_y))
p_2018 <- plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg %>% filter(season == "2017/2018"), aes(x = location_x, y = location_y))
(p_2010 + p_2011 + p_2012)  / (p_2013 + p_2014 + p_2015)  / (p_2016 + p_2017 + p_2017)
p_2010 <- plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg %>% filter(season == "2009/2010"), aes(x = location_x, y = location_y))
p_2011 <- plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg %>% filter(season == "2010/2011"), aes(x = location_x, y = location_y))
p_2012 <- plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg %>% filter(season == "2011/2012"), aes(x = location_x, y = location_y))
p_2013 <- plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg %>% filter(season == "2012/2013"), aes(x = location_x, y = location_y))
p_2014 <- plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg %>% filter(season == "2013/2014"), aes(x = location_x, y = location_y))
p_2015 <- plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg %>% filter(season == "2014/2015"), aes(x = location_x, y = location_y))
p_2016 <- plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg %>% filter(season == "2015/2016"), aes(x = location_x, y = location_y))
p_2017 <- plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg %>% filter(season == "2016/2017"), aes(x = location_x, y = location_y))
p_2018 <- plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg %>% filter(season == "2017/2018"), aes(x = location_x, y = location_y))
p_2019 <- plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg %>% filter(season == "2018/2019"), aes(x = location_x, y = location_y))
p_2020 <- plot_pitch(orientation = "vertical", direction_arrow = TRUE) +
geom_point(data = passes_agg %>% filter(season == "2019/2020"), aes(x = location_x, y = location_y))
(p_2010 + p_2011 + p_2012 + p_2013)  / (p_2014 + p_2015 + p_2016 + p_2017)  / (p_2018 + p_2019 + p_2020)
(p_2010 + p_2011 + p_2012 + p_2013)  / (p_2014 + p_2015 + p_2016 + p_2017)  / (p_2018 + p_2019 + p_2020 + p_2020)
(p_2010 + p_2011 + p_2012)  / (p_2013 + p_2014 + p_2015) / (p_2016 + p_2017 + p_2018) / (p_2019 + p_2020)
View(passes_standardized)
blogdown:::serve_site()
