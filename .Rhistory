data_1 <- data %>%
mutate(endet_bald = if_else(Alter_Vertragsende - Alter_Jetzt < 1.5, 1, 0))
ggplot(data_1, aes(x = Alter_Jetzt, y = Minutenanteil)) +
geom_rect(aes(xmin = 25, xmax = 29, ymin = -Inf, ymax = Inf), fill = background_col, alpha = 0.05) +
#geom_point(aes(color = endet_bald)) +
geom_point() +
#ggforce::geom_link(aes(x = Alter_Vertragsende, xend = Alter_Jetzt, y = Minutenanteil, yend = Minutenanteil, alpha = stat(index), color = endet_bald)) +
ggforce::geom_link(aes(x = Alter_Vertragsende, xend = Alter_Jetzt, y = Minutenanteil, yend = Minutenanteil, alpha = stat(index))) +
scale_colour_manual(endet_bald = c("1" = "red", "0" = "blue")) +
geom_text(aes(label = Spieler), hjust = "middle", vjust = "bottom", nudge_y = 0.02, size = text_size) +
scale_x_continuous(breaks = x_breaks, limits = c(14, 38) ) +
scale_y_continuous(labels = scales::percent) +
labs(x = "Alter (zum 4.4.2020)", y = "Gespielte Minuten in %", title = glue::glue("Kaderprofil - FC Bayern München - <b style = 'color:grey20'>Vertragsende in < 1.5 Jahren</b>"), subtitle = "Bundesliga Saison 2019/2020 - Spieltag 25") +
theme(legend.position="none", plot.title = element_markdown())
text_size <- 3
background_col <- "seagreen3"
link_col <- "red"
highlight_col <- "red"
x_breaks <- seq(from = 18, to = 38, by = 2)
data_1 <- data %>%
mutate(endet_bald = if_else(Alter_Vertragsende - Alter_Jetzt < 1.5, 1, 0))
ggplot(data_1, aes(x = Alter_Jetzt, y = Minutenanteil)) +
geom_rect(aes(xmin = 25, xmax = 29, ymin = -Inf, ymax = Inf), fill = background_col, alpha = 0.05) +
#geom_point(aes(color = endet_bald)) +
geom_point() +
ggforce::geom_link(aes(x = Alter_Vertragsende, xend = Alter_Jetzt, y = Minutenanteil, yend = Minutenanteil, alpha = stat(index), color = endet_bald)) +
#ggforce::geom_link(aes(x = Alter_Vertragsende, xend = Alter_Jetzt, y = Minutenanteil, yend = Minutenanteil, alpha = stat(index))) +
scale_colour_manual(values = c("1" = "red", "0" = "blue")) +
geom_text(aes(label = Spieler), hjust = "middle", vjust = "bottom", nudge_y = 0.02, size = text_size) +
scale_x_continuous(breaks = x_breaks, limits = c(14, 38) ) +
scale_y_continuous(labels = scales::percent) +
labs(x = "Alter (zum 4.4.2020)", y = "Gespielte Minuten in %", title = glue::glue("Kaderprofil - FC Bayern München - <b style = 'color:grey20'>Vertragsende in < 1.5 Jahren</b>"), subtitle = "Bundesliga Saison 2019/2020 - Spieltag 25") +
theme(legend.position="none", plot.title = element_markdown())
text_size <- 3
background_col <- "seagreen3"
link_col <- "red"
highlight_col <- "red"
x_breaks <- seq(from = 18, to = 38, by = 2)
data_1 <- data %>%
mutate(endet_bald = if_else(Alter_Vertragsende - Alter_Jetzt < 1.5, 1, 0))
ggplot(data_1, aes(x = Alter_Jetzt, y = Minutenanteil)) +
geom_rect(aes(xmin = 25, xmax = 29, ymin = -Inf, ymax = Inf), fill = background_col, alpha = 0.05) +
#geom_point(aes(color = endet_bald)) +
geom_point() +
ggforce::geom_link(aes(x = Alter_Vertragsende, xend = Alter_Jetzt, y = Minutenanteil, yend = Minutenanteil, alpha = stat(index), color = endet_bald)) +
#ggforce::geom_link(aes(x = Alter_Vertragsende, xend = Alter_Jetzt, y = Minutenanteil, yend = Minutenanteil, alpha = stat(index))) +
scale_colour_manual(values = c(1 = "red", 0 = "blue")) +
text_size <- 3
background_col <- "seagreen3"
link_col <- "red"
highlight_col <- "red"
x_breaks <- seq(from = 18, to = 38, by = 2)
data_1 <- data %>%
mutate(endet_bald = if_else(Alter_Vertragsende - Alter_Jetzt < 1.5, 1, 0))
ggplot(data_1, aes(x = Alter_Jetzt, y = Minutenanteil)) +
geom_rect(aes(xmin = 25, xmax = 29, ymin = -Inf, ymax = Inf), fill = background_col, alpha = 0.05) +
geom_point(aes(color = endet_bald)) +
#geom_point() +
ggforce::geom_link(aes(x = Alter_Vertragsende, xend = Alter_Jetzt, y = Minutenanteil, yend = Minutenanteil, alpha = stat(index), color = endet_bald)) +
#ggforce::geom_link(aes(x = Alter_Vertragsende, xend = Alter_Jetzt, y = Minutenanteil, yend = Minutenanteil, alpha = stat(index))) +
scale_colour_manual(values = c("1" = "red", "0" = "blue")) +
geom_text(aes(label = Spieler), hjust = "middle", vjust = "bottom", nudge_y = 0.02, size = text_size) +
scale_x_continuous(breaks = x_breaks, limits = c(14, 38) ) +
scale_y_continuous(labels = scales::percent) +
labs(x = "Alter (zum 4.4.2020)", y = "Gespielte Minuten in %", title = glue::glue("Kaderprofil - FC Bayern München - <b style = 'color:grey20'>Vertragsende in < 1.5 Jahren</b>"), subtitle = "Bundesliga Saison 2019/2020 - Spieltag 25") +
theme(legend.position="none", plot.title = element_markdown())
data_1$endet_bald <- as.character(data_1$endet_bald)
text_size <- 3
background_col <- "seagreen3"
link_col <- "red"
highlight_col <- "red"
x_breaks <- seq(from = 18, to = 38, by = 2)
data_1 <- data %>%
mutate(endet_bald = if_else(Alter_Vertragsende - Alter_Jetzt < 1.5, 1, 0))
data_1$endet_bald <- as.character(data_1$endet_bald)
ggplot(data_1, aes(x = Alter_Jetzt, y = Minutenanteil)) +
geom_rect(aes(xmin = 25, xmax = 29, ymin = -Inf, ymax = Inf), fill = background_col, alpha = 0.05) +
geom_point(aes(color = endet_bald)) +
#geom_point() +
ggforce::geom_link(aes(x = Alter_Vertragsende, xend = Alter_Jetzt, y = Minutenanteil, yend = Minutenanteil, alpha = stat(index), color = endet_bald)) +
#ggforce::geom_link(aes(x = Alter_Vertragsende, xend = Alter_Jetzt, y = Minutenanteil, yend = Minutenanteil, alpha = stat(index))) +
scale_colour_manual(values = c("1" = "red", "0" = "blue")) +
geom_text(aes(label = Spieler), hjust = "middle", vjust = "bottom", nudge_y = 0.02, size = text_size) +
scale_x_continuous(breaks = x_breaks, limits = c(14, 38) ) +
scale_y_continuous(labels = scales::percent) +
labs(x = "Alter (zum 4.4.2020)", y = "Gespielte Minuten in %", title = glue::glue("Kaderprofil - FC Bayern München - <b style = 'color:grey20'>Vertragsende in < 1.5 Jahren</b>"), subtitle = "Bundesliga Saison 2019/2020 - Spieltag 25") +
theme(legend.position="none", plot.title = element_markdown())
text_size <- 3
background_col <- "seagreen3"
link_col <- "red"
highlight_col <- "red"
x_breaks <- seq(from = 18, to = 38, by = 2)
data_1 <- data %>%
mutate(endet_bald = if_else(Alter_Vertragsende - Alter_Jetzt < 1.5, "1", "0"))
ggplot(data_1, aes(x = Alter_Jetzt, y = Minutenanteil)) +
geom_rect(aes(xmin = 25, xmax = 29, ymin = -Inf, ymax = Inf), fill = background_col, alpha = 0.05) +
geom_point(aes(color = endet_bald)) +
ggforce::geom_link(aes(x = Alter_Vertragsende, xend = Alter_Jetzt, y = Minutenanteil, yend = Minutenanteil, alpha = stat(index), color = endet_bald)) +
scale_colour_manual(values = c("1" = "tomato", "0" = "black")) +
geom_text(aes(label = Spieler), hjust = "middle", vjust = "bottom", nudge_y = 0.02, size = text_size) +
scale_x_continuous(breaks = x_breaks, limits = c(14, 38) ) +
scale_y_continuous(labels = scales::percent) +
labs(x = "Alter (zum 4.4.2020)", y = "Gespielte Minuten in %", title = glue::glue("Kaderprofil - FC Bayern München - <b style = 'color:grey20'>Vertragsende in < 1.5 Jahren</b>"), subtitle = "Bundesliga Saison 2019/2020 - Spieltag 25") +
theme(legend.position="none", plot.title = element_markdown())
text_size <- 3
background_col <- "seagreen3"
link_col <- "red"
highlight_col <- "red"
x_breaks <- seq(from = 18, to = 38, by = 2)
data_1 <- data %>%
mutate(endet_bald = if_else(Alter_Vertragsende - Alter_Jetzt < 1.5, "1", "0"))
ggplot(data_1, aes(x = Alter_Jetzt, y = Minutenanteil)) +
geom_rect(aes(xmin = 25, xmax = 29, ymin = -Inf, ymax = Inf), fill = background_col, alpha = 0.05) +
geom_point(aes(color = endet_bald)) +
ggforce::geom_link(aes(x = Alter_Vertragsende, xend = Alter_Jetzt, y = Minutenanteil, yend = Minutenanteil, alpha = stat(index), color = endet_bald)) +
scale_colour_manual(values = c("1" = "tomato", "0" = "black")) +
geom_text(aes(label = Spieler), hjust = "middle", vjust = "bottom", nudge_y = 0.02, size = text_size) +
scale_x_continuous(breaks = x_breaks, limits = c(14, 38) ) +
scale_y_continuous(labels = scales::percent) +
labs(x = "Alter (zum 4.4.2020)", y = "Gespielte Minuten in %", title = glue::glue("Kaderprofil - FC Bayern München - <b style = 'color:tomato'>Vertragsende in < 1.5 Jahren</b>"), subtitle = "Bundesliga Saison 2019/2020 - Spieltag 25") +
theme(legend.position="none", plot.title = element_markdown())
text_size <- 3
background_col <- "seagreen3"
link_col <- "red"
highlight_col <- "red"
x_breaks <- seq(from = 18, to = 38, by = 2)
data_1 <- data %>%
mutate(endet_bald = if_else(Alter_Vertragsende - Alter_Jetzt < 1.5, "1", "0"))
ggplot(data_1, aes(x = Alter_Jetzt, y = Minutenanteil)) +
geom_rect(aes(xmin = 25, xmax = 29, ymin = -Inf, ymax = Inf), fill = background_col, alpha = 0.05) +
geom_point(aes(color = endet_bald)) +
ggforce::geom_link(aes(x = Alter_Vertragsende, xend = Alter_Jetzt, y = Minutenanteil, yend = Minutenanteil, alpha = stat(index), color = endet_bald)) +
scale_colour_manual(values = c("1" = "tomato", "0" = "black")) +
geom_text(aes(label = Spieler), hjust = "middle", vjust = "bottom", nudge_y = 0.02, size = text_size) +
scale_x_continuous(breaks = x_breaks, limits = c(14, 38) ) +
scale_y_continuous(labels = scales::percent) +
labs(x = "Alter (zum 4.4.2020)", y = "Gespielte Minuten in %", title = glue::glue("Kaderprofil - FC Bayern München - <style = 'color:tomato'>Vertragsende in < 1.5 Jahren<>"), subtitle = "Bundesliga Saison 2019/2020 - Spieltag 25") +
theme(legend.position="none", plot.title = element_markdown())
text_size <- 3
background_col <- "seagreen3"
link_col <- "red"
highlight_col <- "red"
x_breaks <- seq(from = 18, to = 38, by = 2)
data_1 <- data %>%
mutate(endet_bald = if_else(Alter_Vertragsende - Alter_Jetzt < 1.5, "1", "0"))
ggplot(data_1, aes(x = Alter_Jetzt, y = Minutenanteil)) +
geom_rect(aes(xmin = 25, xmax = 29, ymin = -Inf, ymax = Inf), fill = background_col, alpha = 0.05) +
geom_point(aes(color = endet_bald)) +
ggforce::geom_link(aes(x = Alter_Vertragsende, xend = Alter_Jetzt, y = Minutenanteil, yend = Minutenanteil, alpha = stat(index), color = endet_bald)) +
scale_colour_manual(values = c("1" = "tomato", "0" = "black")) +
geom_text(aes(label = Spieler), hjust = "middle", vjust = "bottom", nudge_y = 0.02, size = text_size) +
scale_x_continuous(breaks = x_breaks, limits = c(14, 38) ) +
scale_y_continuous(labels = scales::percent) +
labs(x = "Alter (zum 4.4.2020)", y = "Gespielte Minuten in %", title = glue::glue("Kaderprofil - FC Bayern München - <b style = 'color:tomato'>Vertragsende in < 1.5 Jahren</b>"), subtitle = "Bundesliga Saison 2019/2020 - Spieltag 25") +
theme(legend.position="none", plot.title = element_markdown())
text_size <- 3
background_col <- "seagreen3"
x_breaks <- seq(from = 18, to = 38, by = 2)
data2 <- data %>%
mutate(Eigene_Jugend = as.character(Eigene_Jugend))
ggplot(data2, aes(x = Alter_Jetzt, y = Minutenanteil)) +
geom_rect(aes(xmin = 25, xmax = 29, ymin = -Inf, ymax = Inf), fill = background_col, alpha = 0.05) +
geom_point(aes(color = Eigene_Jugend)) +
ggforce::geom_link(aes(x = Alter_Vertragsende, xend = Alter_Jetzt, y = Minutenanteil, yend = Minutenanteil, alpha = stat(index), color = Eigene_Jugend)) +
scale_colour_manual(values = c("1" = "tomato", "0" = "black")) +
geom_text(aes(label = Spieler), hjust = "middle", vjust = "bottom", nudge_y = 0.02, size = text_size) +
scale_x_continuous(breaks = x_breaks, limits = c(14, 38) ) +
scale_y_continuous(labels = scales::percent) +
labs(x = "Alter (zum 4.4.2020)", y = "Gespielte Minuten in %", title = glue::glue("Kaderprofil - FC Bayern München - <b style = 'color:tomato'>Aus eigener Jugend</b>"), subtitle = "Bundesliga Saison 2019/2020 - Spieltag 25") +
theme(legend.position="none")
text_size <- 3
background_col <- "seagreen3"
x_breaks <- seq(from = 18, to = 38, by = 2)
data2 <- data %>%
mutate(Eigene_Jugend = as.character(Eigene_Jugend))
ggplot(data2, aes(x = Alter_Jetzt, y = Minutenanteil)) +
geom_rect(aes(xmin = 25, xmax = 29, ymin = -Inf, ymax = Inf), fill = background_col, alpha = 0.05) +
geom_point(aes(color = Eigene_Jugend)) +
ggforce::geom_link(aes(x = Alter_Vertragsende, xend = Alter_Jetzt, y = Minutenanteil, yend = Minutenanteil, alpha = stat(index), color = Eigene_Jugend)) +
scale_colour_manual(values = c("1" = "tomato", "0" = "black")) +
geom_text(aes(label = Spieler), hjust = "middle", vjust = "bottom", nudge_y = 0.02, size = text_size) +
scale_x_continuous(breaks = x_breaks, limits = c(14, 38) ) +
scale_y_continuous(labels = scales::percent) +
labs(x = "Alter (zum 4.4.2020)", y = "Gespielte Minuten in %", title = glue::glue("Kaderprofil - FC Bayern München - <b style = 'color:tomato'>Aus eigener Jugend</b>"), subtitle = "Bundesliga Saison 2019/2020 - Spieltag 25") +
theme(legend.position="none")
text_size <- 3
background_col <- "seagreen3"
x_breaks <- seq(from = 18, to = 38, by = 2)
data2 <- data %>%
mutate(Eigene_Jugend = as.character(Eigene_Jugend))
ggplot(data2, aes(x = Alter_Jetzt, y = Minutenanteil)) +
geom_rect(aes(xmin = 25, xmax = 29, ymin = -Inf, ymax = Inf), fill = background_col, alpha = 0.05) +
geom_point(aes(color = Eigene_Jugend)) +
ggforce::geom_link(aes(x = Alter_Vertragsende, xend = Alter_Jetzt, y = Minutenanteil, yend = Minutenanteil, alpha = stat(index), color = Eigene_Jugend)) +
scale_colour_manual(values = c("1" = "tomato", "0" = "black")) +
geom_text(aes(label = Spieler), hjust = "middle", vjust = "bottom", nudge_y = 0.02, size = text_size) +
scale_x_continuous(breaks = x_breaks, limits = c(14, 38) ) +
scale_y_continuous(labels = scales::percent) +
labs(x = "Alter (zum 4.4.2020)", y = "Gespielte Minuten in %", title = glue::glue("Kaderprofil - FC Bayern München - <b style = 'color:tomato'>Aus eigener Jugend</b>"), subtitle = "Bundesliga Saison 2019/2020 - Spieltag 25") +
theme(legend.position="none", plot.title = element_markdown())
text_size <- 3
background_col <- "seagreen3"
link_col <- "red"
x_breaks <- seq(from = 18, to = 38, by = 2)
ggplot(data, aes(x = Alter_Jetzt, y = Minutenanteil)) +
geom_rect(aes(xmin = 25, xmax = 29, ymin = -Inf, ymax = Inf), fill = background_col, alpha = 0.05) +
geom_point(aes(color = Position)) +
ggforce::geom_link(aes(x = Alter_Zugang, xend = Alter_Jetzt, y = Minutenanteil, yend = Minutenanteil, alpha = stat(index), color = Position)) +
scale_colour_manual(values = c("Torwart" = "tomato", "Verteidigung" = "deepskyblue", "Mittelfeld" = "gold", "Sturm" = "purple")) +
geom_text(aes(label = Spieler), hjust = "middle", vjust = "bottom", nudge_y = 0.02, size = text_size) +
scale_x_continuous(breaks = x_breaks, limits = c(14, 38) ) +
scale_y_continuous(labels = scales::percent) +
labs(x = "Alter (zum 4.4.2020)", y = "Gespielte Minuten in %", title = "Kaderprofil - FC Bayern München", subtitle = glue::glue("Bundesliga Saison 2019/2020 - Spieltag 25 - <b style = 'color:tomato'>Torwart</b> <b style = 'color:deepskyblue'>Verteidigung</b> <b style = 'color:gold'>Mittelfeld</b> <b style = 'color:purple'>Sturm</b>")) +
theme(legend.position="none", plot.subtitle = element_markdown())
blogdown:::serve_site()
blogdown:::serve_site()
text_size <- 3
background_col <- "seagreen3"
link_col <- "red"
x_breaks <- seq(from = 18, to = 38, by = 2)
ggplot(data, aes(x = Alter_Jetzt, y = Minutenanteil)) +
geom_rect(aes(xmin = 25, xmax = 29, ymin = -Inf, ymax = Inf), fill = background_col, alpha = 0.05) +
geom_point(aes(color = Position)) +
ggforce::geom_link(aes(x = Alter_Zugang, xend = Alter_Jetzt, y = Minutenanteil, yend = Minutenanteil, alpha = stat(index), color = Position)) +
scale_colour_manual(values = c("Torwart" = "tomato", "Verteidigung" = "deepskyblue", "Mittelfeld" = "gold", "Sturm" = "purple")) +
geom_text(aes(label = Spieler), hjust = "middle", vjust = "bottom", nudge_y = 0.02, size = text_size) +
scale_x_continuous(breaks = x_breaks, limits = c(14, 38) ) +
scale_y_continuous(labels = scales::percent) +
labs(x = "Alter (zum 4.4.2020)", y = "Gespielte Minuten in %", title = "Kaderprofil - FC Bayern München", subtitle = glue::glue("Bundesliga Saison 2019/2020 - Spieltag 25 - <b style = 'color:tomato'>Torwart</b> <b style = 'color:deepskyblue'>Verteidigung</b> <b style = 'color:gold'>Mittelfeld</b> <b style = 'color:purple'>Sturm</b>")) +
theme(legend.position="none", plot.subtitle = element_markdown())
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::insert_image_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::insert_image_addin()
library(DBI)
con <- dbConnect(RSQLite::SQLite(), dbname = '~/Documents/Jupyter/footballData.sqlite')
freekick_table <- dbGetQuery( con,'SELECT * from Freekicks' )
freekick_table <- freekick_table[,c('date', 'league', 'player_name', 'is_goal', 'x_coordinate', 'y_coordinate', 'goal_mouth_y', 'goal_mouth_z', 'blocked', 'team_defending')]
dbDisconnect(con)
library(dplyr)
freekick_table_filtered <- freekick_table %>%
filter(x_coordinate > 50) %>%
filter(!(x_coordinate > 83 & y_coordinate > 21.1 & y_coordinate < 78.9)) %>%
filter(!(x_coordinate < 17 & y_coordinate > 21.1 & y_coordinate < 78.9)) %>%
filter(goal_mouth_y <= 60) %>%
filter(goal_mouth_y >= 40) %>%
filter(player_name == "Cristiano Ronaldo")
freekick_table_filtered$y_coordinate <- (freekick_table_filtered$y_coordinate - 100)*(-1)
freekick_table_filtered$blocked[is.na(freekick_table_filtered$blocked)] <- 'false'
outcome <- function(row){
if(row['is_goal'] == '1') return('Goal') else
if(row['blocked'] == 'true') return('Blocked') else
if( (row['goal_mouth_z'] > 38) | (row['goal_mouth_y'] < 44.2 | row['goal_mouth_y'] > 55.8 )) return('Off-Goal') else
return('Saved')
}
freekick_table_filtered$outcome <- apply(freekick_table_filtered, 1, outcome)
View(freekick_table_filtered)
library(ggplot2)
library(jpeg)
library(grid)
library(plotly)
library(crosstalk)
options(warn = -1)
shared_freekick <- SharedData$new(freekick_table_filtered)
images_pitch = list(
list(
source = "https://raw.githubusercontent.com/larsmaurath/larsmaurath.github.io/master/2019/03/30/half_pitch_bw.jpeg",
xref = "x",
yref = "y",
x = 0,
y = 100,
sizex = 100,
sizey = 50,
sizing = "stretch",
opacity = 0.8,
layer = "below"
)
)
images_goal = list(
list(
source = "https://raw.githubusercontent.com/larsmaurath/larsmaurath.github.io/master/2019/03/30/goal.png",
xref = "x",
yref = "y",
x = 40,
y = 100,
sizex = 20,
sizey = 100,
sizing = "stretch",
opacity = 0.8,
layer = "below"
)
)
p <- plot_ly(shared_freekick, x = ~y_coordinate, y = ~x_coordinate, width = "100%", height = "100%", hoverinfo = "text",
hovertext = paste("Against :", freekick_table_filtered$team_defending,
"<br> Date :", freekick_table_filtered$date)) %>%
layout(images = images_pitch, xaxis = list(range = c(0, 100), showgrid = F, showticklabels = FALSE, title = ""),
yaxis = list(range = c(50, 100), showgrid = F, showticklabels = FALSE, title = ""), title = "Free Kick Location") %>%
highlight("plotly_selected", dynamic = TRUE) %>%
config(displayModeBar = F)
q <- plot_ly(shared_freekick, x = ~goal_mouth_y, y = ~goal_mouth_z, width = "100%", height = "100%", hoverinfo = "text",
hovertext = paste("Against :", freekick_table_filtered$team_defending,
"<br> Date :", freekick_table_filtered$date)) %>%
layout(images = images_goal, xaxis = list(range = c(40, 60), showgrid = F, showticklabels = FALSE, title = ""),
yaxis = list(range = c(0, 100), showgrid = F, showticklabels = FALSE, title = ""), title = "Free Kick Impact") %>%
highlight("plotly_selected", dynamic = TRUE) %>%
config(displayModeBar = F)
bscols(list(filter_checkbox("outcome", "Outcome", shared_freekick, ~outcome, inline = FALSE), p, q ))
library(ggplot2)
library(jpeg)
library(grid)
library(plotly)
library(crosstalk)
options(warn = -1)
shared_freekick <- SharedData$new(freekick_table_filtered)
images_pitch = list(
list(
source = "https://raw.githubusercontent.com/larsmaurath/larsmaurath.github.io/master/2019/03/30/half_pitch_bw.jpeg",
xref = "x",
yref = "y",
x = 0,
y = 100,
sizex = 100,
sizey = 50,
sizing = "stretch",
opacity = 0.8,
layer = "below"
)
)
images_goal = list(
list(
source = "https://raw.githubusercontent.com/larsmaurath/larsmaurath.github.io/master/2019/03/30/goal.png",
xref = "x",
yref = "y",
x = 40,
y = 100,
sizex = 20,
sizey = 100,
sizing = "stretch",
opacity = 0.8,
layer = "below"
)
)
p1 <- plot_ly(shared_freekick, x = ~y_coordinate, y = ~x_coordinate, width = "100%", height = "100%", hoverinfo = "text",
hovertext = paste("Against :", freekick_table_filtered$team_defending,
"<br> Date :", freekick_table_filtered$date)) %>%
layout(images = images_pitch, xaxis = list(range = c(0, 100), showgrid = F, showticklabels = FALSE, title = ""),
yaxis = list(range = c(50, 100), showgrid = F, showticklabels = FALSE, title = ""), title = "Free Kick Location") %>%
highlight("plotly_selected", dynamic = TRUE) %>%
config(displayModeBar = F)
p2 <- plot_ly(shared_freekick, x = ~goal_mouth_y, y = ~goal_mouth_z, width = "100%", height = "100%", hoverinfo = "text",
hovertext = paste("Against :", freekick_table_filtered$team_defending,
"<br> Date :", freekick_table_filtered$date)) %>%
layout(images = images_goal, xaxis = list(range = c(40, 60), showgrid = F, showticklabels = FALSE, title = ""),
yaxis = list(range = c(0, 100), showgrid = F, showticklabels = FALSE, title = ""), title = "Free Kick Impact") %>%
highlight("plotly_selected", dynamic = TRUE) %>%
config(displayModeBar = F)
p3 <- filter_checkbox("outcome", "Outcome", shared_freekick, ~outcome, inline = FALSE)
p3 / (p1|p2)
library("patchwork")
p3 / (p1 | p2)
(p1 | p2)
library("patchwork")
p1 + p2
library(ggplot2)
library(patchwork)
p1 <- ggplot(mtcars) + geom_point(aes(mpg, disp))
p2 <- ggplot(mtcars) + geom_boxplot(aes(gear, disp, group = gear))
p1 + p2
plot_ly(p1) + p2
plot_ly(p1) + plot_ly(p2)
ggplotly(p1) + ggplotly(p2)
test <- ggplotly(p2)
library(ggplot2)
library(jpeg)
library(grid)
library(plotly)
library(crosstalk)
options(warn = -1)
shared_freekick <- SharedData$new(freekick_table_filtered)
images_pitch = list(
list(
source = "https://raw.githubusercontent.com/larsmaurath/larsmaurath.github.io/master/2019/03/30/half_pitch_bw.jpeg",
xref = "x",
yref = "y",
x = 0,
y = 100,
sizex = 100,
sizey = 50,
sizing = "stretch",
opacity = 0.8,
layer = "below"
)
)
images_goal = list(
list(
source = "https://raw.githubusercontent.com/larsmaurath/larsmaurath.github.io/master/2019/03/30/goal.png",
xref = "x",
yref = "y",
x = 40,
y = 100,
sizex = 20,
sizey = 100,
sizing = "stretch",
opacity = 0.8,
layer = "below"
)
)
p <- plot_ly(shared_freekick, x = ~y_coordinate, y = ~x_coordinate, width = "100%", height = "100%", hoverinfo = "text",
hovertext = paste("Against :", freekick_table_filtered$team_defending,
"<br> Date :", freekick_table_filtered$date)) %>%
layout(images = images_pitch, xaxis = list(range = c(0, 100), showgrid = F, showticklabels = FALSE, title = ""),
yaxis = list(range = c(50, 100), showgrid = F, showticklabels = FALSE, title = ""), title = "Free Kick Location") %>%
highlight("plotly_selected", dynamic = TRUE) %>%
config(displayModeBar = F)
q <- plot_ly(shared_freekick, x = ~goal_mouth_y, y = ~goal_mouth_z, width = "100%", height = "100%", hoverinfo = "text",
hovertext = paste("Against :", freekick_table_filtered$team_defending,
"<br> Date :", freekick_table_filtered$date)) %>%
layout(images = images_goal, xaxis = list(range = c(40, 60), showgrid = F, showticklabels = FALSE, title = ""),
yaxis = list(range = c(0, 100), showgrid = F, showticklabels = FALSE, title = ""), title = "Free Kick Impact") %>%
highlight("plotly_selected", dynamic = TRUE) %>%
config(displayModeBar = F)
bscols(list(filter_checkbox("outcome", "Outcome", shared_freekick, ~outcome, inline = FALSE), p, q ))
library(crosstalk)
shared_iris <- SharedData$new(iris)
bscols(
d3scatter(shared_iris, ~Petal.Length, ~Petal.Width, ~Species, width="100%", height=300),
d3scatter(shared_iris, ~Sepal.Length, ~Sepal.Width, ~Species, width="100%", height=300)
)
library(crosstalk)
library(d3scatter)
devtools::install_github("jcheng5/d3scatter")
library(crosstalk)
library(d3scatter)
shared_iris <- SharedData$new(iris)
bscols(
d3scatter(shared_iris, ~Petal.Length, ~Petal.Width, ~Species, width="100%", height=300),
d3scatter(shared_iris, ~Sepal.Length, ~Sepal.Width, ~Species, width="100%", height=300)
)
blogdown:::new_post_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::serve_site()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
options(blogdown.allow_knit = TRUE)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::new_post_addin()
con <- DBI::dbConnect(RSQLite::SQLite(), dbname = "~/Documents/Blog/Data/data.sqlite")
passes <- tbl(con, "events") %>%
filter(playerId == "31772") %>%
filter(type_name == "Pass") %>%
collect()
library(tidyverse)
library(dbplyr)
library(DBI)
library(tidyverse)
library(dbplyr)
library(DBI)
con <- DBI::dbConnect(RSQLite::SQLite(), dbname = "~/Documents/Blog/Data/data.sqlite")
passes <- tbl(con, "events") %>%
filter(playerId == "31772") %>%
filter(type_name == "Pass") %>%
collect()
DBI::dbDisconnect(con)
View(passes)
View(passes)
con <- DBI::dbConnect(RSQLite::SQLite(), dbname = "~/Documents/Blog/Data/data.sqlite")
passes <- tbl(con, "events") %>%
filter(playerId == "31772") %>%
filter(type_name == "Pass") %>%
filter(!(qualifiers %like% "%CornerTaken%")) %>%
filter(!(qualifiers %like% "%HeadPass%")) %>%
filter(!(qualifiers %like% "%FreekickTaken%")) %>%
filter(!(qualifiers %like% "%ThrowIn%")) %>%
filter(!(qualifiers %like% "%FreekickTaken%")) %>%
collect()
DBI::dbDisconnect(con)
View(passes)
View(passes)
matches <- unique(passes$match_id)
match_ids <- unique(passes$match_id)
con <- DBI::dbConnect(RSQLite::SQLite(), dbname = "~/Documents/Blog/Data/data.sqlite")
matches <- tbl(con, "matches") %>%
filter(match_id %in% match_ids) %>%
collect()
DBI::dbDisconnect(con)
View(matches)
