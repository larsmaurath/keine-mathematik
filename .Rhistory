linetype = "dotted") +
annotate("text",
x = 1.7,
y = 7,
colour = "white",
size = 2.5,
family = "mono",
hjust = 0,
label = "Vorwärtspässe (pro 90min)") +
annotate("text",
x = 0,
y = 2.3,
colour = "white",
size = 2.5,
family = "mono",
hjust = 0,
angle = 90,
label = "Seitenwechsel (pro 90min)") +
theme_minimal() +
labs(#x = 'Vorwärtspässe (pro 90min)',
#y = 'Seitenwechsel (pro 90min)',
x = "",
y = "",
title = "Seitenwechsel oder Vorwärtspässe",
subtitle = "Toni Kroos spielt die meisten Seitenwechsel in den Top 5-Ligen und trägt gleichzeitig zur Vorwärtsbewegung bei \n(Saison 2019-2020, Top 5-Ligen) - Daten: @StatsBomb via FBRef.com") +
theme(legend.position = "none",
plot.background = element_rect(fill = "grey10", color = NA),
panel.background = element_rect(fill = "transparent", color = NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title = element_text(colour = "grey90", family = "mono"),
axis.text =  element_text(colour = "grey90", family = "mono"),
plot.title = element_text(colour = "grey90", family = "mono"),
plot.subtitle = element_text(colour = "grey90", family = "mono", size = 7)) +
draw_image("../data/SB_Regular_Alt.png", x = 11.0, y = 0.0, scale = 4) +
draw_image("../data/fb-logo.svg", x = 12.0, y = 1.0, scale = 2)
read_csv("../data/fbref_passing.csv", col_types = cols()) %>%
mutate(highlight = if_else(Player %in% c("Toni Kroos", "Thiago Alcántara", "İlkay Gündoğan", "Leon Goretzka"), "1", "0")) %>%
ggplot(aes(x = Prog, y = Pass_Types_Sw, color = highlight)) +
geom_point() +
scale_color_manual(values = c("1" = "tomato2", "0" = "grey70")) +
scale_x_continuous(breaks = seq(from = 0, to = 12, by = 3), limits = c(0, 14) ) +
geom_text_repel(aes(label = if_else(highlight == 1, Player, "")), size = 3, family = "mono") +
geom_segment(data = data.frame(x = 0, xend = 1.5, y = 7, yend = 7, highlight = NA),
aes(x = x, y = y, xend = xend, yend = yend),
color = "white",
size = 0.2,
linetype = "dotted") +
geom_segment(data = data.frame(x = 0, xend = 0, y = 7, yend = 5.5, highlight = NA),
aes(x = x, y = y, xend = xend, yend = yend),
color = "white",
size = 0.2,
linetype = "dotted") +
annotate("text",
x = 1.7,
y = 7,
colour = "white",
size = 2.5,
family = "mono",
hjust = 0,
label = "Vorwärtspässe (pro 90min)") +
annotate("text",
x = 0,
y = 2.3,
colour = "white",
size = 2.5,
family = "mono",
hjust = 0,
angle = 90,
label = "Seitenwechsel (pro 90min)") +
theme_minimal() +
labs(#x = 'Vorwärtspässe (pro 90min)',
#y = 'Seitenwechsel (pro 90min)',
x = "",
y = "",
title = "Seitenwechsel oder Vorwärtspässe",
subtitle = "Toni Kroos spielt die meisten Seitenwechsel in den Top 5-Ligen und trägt gleichzeitig zur Vorwärtsbewegung bei \n(Saison 2019-2020, Top 5-Ligen) - Daten: @StatsBomb via FBRef.com") +
theme(legend.position = "none",
plot.background = element_rect(fill = "grey10", color = NA),
panel.background = element_rect(fill = "transparent", color = NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title = element_text(colour = "grey90", family = "mono"),
axis.text =  element_text(colour = "grey90", family = "mono"),
plot.title = element_text(colour = "grey90", family = "mono"),
plot.subtitle = element_text(colour = "grey90", family = "mono", size = 7)) +
draw_image("../data/SB_Regular_Alt.png", x = 11.0, y = 0.0, scale = 4) +
draw_image("../data/fb-logo.svg", x = 12.0, y = 0.8, scale = 2)
read_csv("../data/fbref_passing.csv", col_types = cols()) %>%
mutate(highlight = if_else(Player %in% c("Toni Kroos", "Thiago Alcántara", "İlkay Gündoğan", "Leon Goretzka"), "1", "0")) %>%
ggplot(aes(x = Prog, y = Pass_Types_Sw, color = highlight)) +
geom_point() +
scale_color_manual(values = c("1" = "tomato2", "0" = "grey70")) +
scale_x_continuous(breaks = seq(from = 0, to = 12, by = 3), limits = c(0, 14) ) +
geom_text_repel(aes(label = if_else(highlight == 1, Player, "")), size = 3, family = "mono") +
geom_segment(data = data.frame(x = 0, xend = 1.5, y = 7, yend = 7, highlight = NA),
aes(x = x, y = y, xend = xend, yend = yend),
color = "white",
size = 0.2,
linetype = "dotted") +
geom_segment(data = data.frame(x = 0, xend = 0, y = 7, yend = 5.5, highlight = NA),
aes(x = x, y = y, xend = xend, yend = yend),
color = "white",
size = 0.2,
linetype = "dotted") +
annotate("text",
x = 1.7,
y = 7,
colour = "white",
size = 2.5,
family = "mono",
hjust = 0,
label = "Vorwärtspässe (pro 90min)") +
annotate("text",
x = 0,
y = 2.3,
colour = "white",
size = 2.5,
family = "mono",
hjust = 0,
angle = 90,
label = "Seitenwechsel (pro 90min)") +
theme_minimal() +
labs(#x = 'Vorwärtspässe (pro 90min)',
#y = 'Seitenwechsel (pro 90min)',
x = "",
y = "",
title = "Seitenwechsel oder Vorwärtspässe",
subtitle = "Toni Kroos spielt die meisten Seitenwechsel in den Top 5-Ligen und trägt gleichzeitig zur Vorwärtsbewegung bei \n(Saison 2019-2020, Top 5-Ligen) - Daten: @StatsBomb via FBRef.com") +
theme(legend.position = "none",
plot.background = element_rect(fill = "grey10", color = NA),
panel.background = element_rect(fill = "transparent", color = NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title = element_text(colour = "grey90", family = "mono"),
axis.text =  element_text(colour = "grey90", family = "mono"),
plot.title = element_text(colour = "grey90", family = "mono"),
plot.subtitle = element_text(colour = "grey90", family = "mono", size = 7)) +
draw_image("../data/SB_Regular_Alt.png", x = 11.0, y = 0.0, scale = 4) +
draw_image("../data/fb-logo.svg", x = 12.0, y = 0.6, scale = 2)
read_csv("../data/fbref_passing.csv", col_types = cols()) %>%
mutate(Total_PrgDist = 0.9144*Total_PrgDist, Carries_PrgDist = 0.9144*Carries_PrgDist) %>%
mutate(highlight = if_else(Player %in% c("Toni Kroos", "Thiago Alcántara", "İlkay Gündoğan", "Leon Goretzka"), "1", "0")) %>%
ggplot(aes(x = Total_PrgDist, y = Carries_PrgDist, color = highlight)) +
geom_point() +
scale_color_manual(values = c("1" = "tomato2", "0" = "grey70")) +
scale_x_continuous(breaks = seq(from = 0, to = 500, by = 50), limits = c(0, 500) ) +
scale_y_continuous(breaks = seq(from = 0, to = 300, by = 50), limits = c(0, 320) ) +
geom_text_repel(aes(label = if_else(highlight == 1, Player, "")), size = 3, family = "mono") +
geom_segment(data = data.frame(x = 0, xend = 80, y = 300, yend = 300, highlight = NA),
aes(x = x, y = y, xend = xend, yend = yend),
color = "white",
size = 0.2,
linetype = "dotted") +
geom_segment(data = data.frame(x = 0, xend = 0, y = 300, yend = 250, highlight = NA),
aes(x = x, y = y, xend = xend, yend = yend),
color = "white",
size = 0.2,
linetype = "dotted") +
annotate("text",
x = 90,
y = 300,
colour = "white",
size = 2.5,
family = "mono",
hjust = 0,
label = "Gewonnene Meter durch Vorwärtspässe (pro 90min)") +
annotate("text",
x = 0,
y = 15,
colour = "white",
size = 2.5,
family = "mono",
hjust = 0,
angle = 90,
label = "Gewonnene Meter durch Läufe (pro 90min)") +
theme_minimal() +
labs(x = "",
y = "",
title = "Gewonnene Meter mit dem Ball am Fuß oder durch Pässe",
subtitle = "Auch in gewonnenen Metern in der Vorwärtsbewegung ist Toni Kroos Teil einer Gruppe von Elitespieler, \ndie sowohl durch Pässe als auch durch Läufe den Ball nach vorne treiben  \n(Saison 2019-2020, Top 5-Ligen) - Daten: @StatsBomb via FBRef.com") +
theme(legend.position = "none",
plot.background = element_rect(fill = "grey10", color = NA),
panel.background = element_rect(fill = "transparent", color = NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title = element_text(colour = "grey90", family = "mono"),
axis.text =  element_text(colour = "grey90", family = "mono"),
plot.title = element_text(colour = "grey90", family = "mono"),
plot.subtitle = element_text(colour = "grey90", family = "mono", size = 7)) +
draw_image("../data/SB_Regular_Alt.png", x = 400, y = 0.0, scale = 160) +
draw_image("../data/fb-logo.svg", x = 428, y = 40.0, scale = 100)
read_csv("../data/fbref_passing.csv", col_types = cols()) %>%
mutate(Total_PrgDist = 0.9144*Total_PrgDist, Carries_PrgDist = 0.9144*Carries_PrgDist) %>%
mutate(highlight = if_else(Player %in% c("Toni Kroos", "Thiago Alcántara", "İlkay Gündoğan", "Leon Goretzka"), "1", "0")) %>%
ggplot(aes(x = Total_PrgDist, y = Carries_PrgDist, color = highlight)) +
geom_point() +
scale_color_manual(values = c("1" = "tomato2", "0" = "grey70")) +
scale_x_continuous(breaks = seq(from = 0, to = 500, by = 50), limits = c(0, 500) ) +
scale_y_continuous(breaks = seq(from = 0, to = 300, by = 50), limits = c(0, 320) ) +
geom_text_repel(aes(label = if_else(highlight == 1, Player, "")), size = 3, family = "mono") +
geom_segment(data = data.frame(x = 0, xend = 80, y = 300, yend = 300, highlight = NA),
aes(x = x, y = y, xend = xend, yend = yend),
color = "white",
size = 0.2,
linetype = "dotted") +
geom_segment(data = data.frame(x = 0, xend = 0, y = 300, yend = 250, highlight = NA),
aes(x = x, y = y, xend = xend, yend = yend),
color = "white",
size = 0.2,
linetype = "dotted") +
annotate("text",
x = 90,
y = 300,
colour = "white",
size = 2.5,
family = "mono",
hjust = 0,
label = "Gewonnene Meter durch Vorwärtspässe (pro 90min)") +
annotate("text",
x = 0,
y = 15,
colour = "white",
size = 2.5,
family = "mono",
hjust = 0,
angle = 90,
label = "Gewonnene Meter durch Läufe (pro 90min)") +
theme_minimal() +
labs(x = "",
y = "",
title = "Gewonnene Meter mit dem Ball am Fuß oder durch Pässe",
subtitle = "Auch gemessen in gewonnenen Metern ist Toni Kroos Teil einer Gruppe von Elitespieler, \ndie sowohl durch Pässe als auch durch Läufe den Ball nach vorne treiben  \n(Saison 2019-2020, Top 5-Ligen) - Daten: @StatsBomb via FBRef.com") +
theme(legend.position = "none",
plot.background = element_rect(fill = "grey10", color = NA),
panel.background = element_rect(fill = "transparent", color = NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title = element_text(colour = "grey90", family = "mono"),
axis.text =  element_text(colour = "grey90", family = "mono"),
plot.title = element_text(colour = "grey90", family = "mono"),
plot.subtitle = element_text(colour = "grey90", family = "mono", size = 7)) +
draw_image("../data/SB_Regular_Alt.png", x = 400, y = 0.0, scale = 160) +
draw_image("../data/fb-logo.svg", x = 428, y = 40.0, scale = 100)
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
library(tidyverse)
library(glue)
library(ggtext)
library(patchwork)
library(png)
library(cowplot)
library(magick)
source("..\data\standardize_coordinates.r")
library(tidyverse)
library(glue)
library(ggtext)
library(patchwork)
library(png)
library(cowplot)
library(magick)
source("../data/standardize_coordinates.r")
source("../data/pitch_plot.r")
blogdown:::serve_site()
library(tidyverse)
library(glue)
library(ggtext)
library(patchwork)
library(png)
library(cowplot)
library(magick)
library(ggrepel)
source("../data/standardize_coordinates.r")
source("../data/pitch_plot.r")
compute_xg <- function(location_x, location_y, header, from_corner, from_fk, direct_fk, fast_break, penalty){
distance_func <- function(x_pos, y_pos){
x_meters <- 95.4
y_meters <- 76.25
x_shift <- (100 - x_pos)*x_meters/100
y_shift <- abs(50 - y_pos)*y_meters/100
distance <- sqrt(x_shift*x_shift + y_shift*y_shift)
}
goal_angle_func <- function(x_pos, y_pos){
x_meters <- 95.4
y_meters <- 76.25
x_shift <- (100 - x_pos)*x_meters/100
y_shift <- (50 - y_pos)*y_meters/100
angle <- atan((7.32*x_shift)/(x_shift*x_shift + y_shift*y_shift - (7.32/2)*(7.32/2)))
angle <- ifelse(angle < 0, angle + pi, angle)
angle_degrees <- angle*180/pi
}
if(penalty == 1){
return(0.75)
}
distance <- distance_func(location_x, location_y)
angle <- goal_angle_func(location_x, location_y)
xg <- 1 / (1 + exp(0.74 + 0.13*distance - 0.02*angle + 0.92*header + 0.75*from_corner + 0.29*from_fk - 0.95*direct_fk - 0.93*fast_break))
}
plot_shotmap <- function(data){
plot_pitch(unit = "meters", theme = "light", type = "offensive_half", orientation = "vertical", direction_arrow = FALSE) +
geom_point(data = data, aes(x = location_x, y = location_y, color = xg, shape = is_goal), size = 2) +
scale_color_gradientn("xG-Wert",
limits = c(0,1),
colours = c("grey15", "#440154FF", "#3B528BFF", "#3B528BFF", "#3B528BFF", "#21908CFF", "#21908CFF", "#21908CFF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#FDE725FF", "#FDE725FF", "#FDE725FF", "#FDE725FF", "#FDE725FF", "#FDE725FF")) +
scale_shape_manual(values = c("Goal" = "diamond", "No_Goal" = "circle"), guide=FALSE)
}
dummy_shots <- tibble(location_x = c(100, 95, 80), location_y = c(34, 38, 27), xg = c(0.5, 0.2, 0.05), is_goal = c("No_Goal", "Goal", "No_Goal"))
plot_pitch(unit = "meters", theme = "light", type = "offensive_half", orientation = "vertical", direction_arrow = FALSE) +
geom_point(data = dummy_shots, aes(x = location_x, y = location_y, color = xg, shape = is_goal), size = 4) +
scale_color_gradientn("xG-Wert",
limits = c(0,1),
colours = c("grey15", "#440154FF", "#3B528BFF", "#3B528BFF", "#3B528BFF", "#21908CFF", "#21908CFF", "#21908CFF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#FDE725FF", "#FDE725FF", "#FDE725FF", "#FDE725FF", "#FDE725FF", "#FDE725FF")) +
scale_shape_manual(values = c("Goal" = "diamond", "No_Goal" = "circle"), guide=FALSE) +
theme(legend.position = c(0.8, 0.3), legend.key.size = unit(0.4, "cm"), legend.text=element_text(size = 12), legend.title = element_text(size = 16))
dummy_shots <- tibble(location_x = c(100, 95, 80), location_y = c(34, 38, 27), xg = c(0.5, 0.2, 0.05), is_goal = c("No_Goal", "Goal", "No_Goal"))
plot_pitch(unit = "meters", theme = "light", type = "offensive_half", orientation = "vertical", direction_arrow = FALSE) +
geom_point(data = dummy_shots, aes(x = location_x, y = location_y, color = xg, shape = is_goal), size = 4) +
scale_color_gradientn("xG-Wert",
limits = c(0,1),
colours = c("grey15", "#440154FF", "#3B528BFF", "#3B528BFF", "#3B528BFF", "#21908CFF", "#21908CFF", "#21908CFF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#FDE725FF", "#FDE725FF", "#FDE725FF", "#FDE725FF", "#FDE725FF", "#FDE725FF")) +
scale_shape_manual(values = c("Goal" = "diamond", "No_Goal" = "circle"), guide=FALSE) +
annotate("text", x = 102, y = 36, label = "Schuß mit hohem xG-Wert") +
annotate("text", x = 95, y = 45, label = "Tor") +
annotate("text", x = 80, y = 25, label = "Schuß mit niedrigem xG-Wert") +
theme(legend.position = c(0.8, 0.3), legend.key.size = unit(0.4, "cm"), legend.text=element_text(size = 12), legend.title = element_text(size = 16))
dummy_shots <- tibble(location_x = c(100, 95, 80), location_y = c(34, 38, 27), xg = c(0.5, 0.2, 0.05), is_goal = c("No_Goal", "Goal", "No_Goal"))
plot_pitch(unit = "meters", theme = "light", type = "offensive_half", orientation = "vertical", direction_arrow = FALSE) +
geom_point(data = dummy_shots, aes(x = location_x, y = location_y, color = xg, shape = is_goal), size = 4) +
scale_color_gradientn("xG-Wert",
limits = c(0,1),
colours = c("grey15", "#440154FF", "#3B528BFF", "#3B528BFF", "#3B528BFF", "#21908CFF", "#21908CFF", "#21908CFF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#FDE725FF", "#FDE725FF", "#FDE725FF", "#FDE725FF", "#FDE725FF", "#FDE725FF")) +
scale_shape_manual(values = c("Goal" = "diamond", "No_Goal" = "circle"), guide=FALSE) +
annotate("text", x = 102, y = 36, label = "Schuß mit hohem xG-Wert") +
annotate("text", x = 95, y = 43, label = "Tor") +
annotate("text", x = 78, y = 25, label = "Schuß mit niedrigem xG-Wert") +
theme(legend.position = c(0.8, 0.3), legend.key.size = unit(0.4, "cm"), legend.text=element_text(size = 12), legend.title = element_text(size = 16))
dummy_shots <- tibble(location_x = c(100, 95, 80), location_y = c(34, 38, 27), xg = c(0.5, 0.2, 0.05), is_goal = c("No_Goal", "Goal", "No_Goal"))
plot_pitch(unit = "meters", theme = "light", type = "offensive_half", orientation = "vertical", direction_arrow = FALSE) +
geom_point(data = dummy_shots, aes(x = location_x, y = location_y, color = xg, shape = is_goal), size = 4) +
scale_color_gradientn("xG-Wert",
limits = c(0,1),
colours = c("grey15", "#440154FF", "#3B528BFF", "#3B528BFF", "#3B528BFF", "#21908CFF", "#21908CFF", "#21908CFF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#FDE725FF", "#FDE725FF", "#FDE725FF", "#FDE725FF", "#FDE725FF", "#FDE725FF")) +
scale_shape_manual(values = c("Goal" = "diamond", "No_Goal" = "circle"), guide=FALSE) +
annotate("text", x = 102, y = 36, label = "Schuß mit hohem xG-Wert") +
annotate("text", x = 95, y = 43, label = "Tor") +
annotate("text", x = 77, y = 25, label = "Schuß mit niedrigem xG-Wert") +
theme(legend.position = c(0.8, 0.3), legend.key.size = unit(0.4, "cm"), legend.text=element_text(size = 12), legend.title = element_text(size = 16))
dummy_shots <- tibble(location_x = c(100, 95, 80), location_y = c(34, 38, 27), xg = c(0.5, 0.2, 0.05), is_goal = c("No_Goal", "Goal", "No_Goal"))
plot_pitch(unit = "meters", theme = "light", type = "offensive_half", orientation = "vertical", direction_arrow = FALSE) +
geom_point(data = dummy_shots, aes(x = location_x, y = location_y, color = xg, shape = is_goal), size = 4) +
scale_color_gradientn("xG-Wert",
limits = c(0,1),
colours = c("grey15", "#440154FF", "#3B528BFF", "#3B528BFF", "#3B528BFF", "#21908CFF", "#21908CFF", "#21908CFF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#FDE725FF", "#FDE725FF", "#FDE725FF", "#FDE725FF", "#FDE725FF", "#FDE725FF")) +
scale_shape_manual(values = c("Goal" = "diamond", "No_Goal" = "circle"), guide=FALSE) +
annotate("text", x = 102, y = 36, label = "Schuß mit hohem xG-Wert") +
annotate("text", x = 95, y = 41, label = "Tor") +
annotate("text", x = 77, y = 25, label = "Schuß mit niedrigem xG-Wert") +
theme(legend.position = c(0.8, 0.3), legend.key.size = unit(0.4, "cm"), legend.text=element_text(size = 12), legend.title = element_text(size = 16))
dummy_shots <- tibble(location_x = c(100, 95, 80), location_y = c(34, 38, 27), xg = c(0.5, 0.2, 0.05), is_goal = c("No_Goal", "Goal", "No_Goal"))
plot_pitch(unit = "meters", theme = "light", type = "offensive_half", orientation = "vertical", direction_arrow = FALSE) +
geom_point(data = dummy_shots, aes(x = location_x, y = location_y, color = xg, shape = is_goal), size = 4) +
scale_color_gradientn("xG-Wert",
limits = c(0,1),
colours = c("grey15", "#440154FF", "#3B528BFF", "#3B528BFF", "#3B528BFF", "#21908CFF", "#21908CFF", "#21908CFF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#FDE725FF", "#FDE725FF", "#FDE725FF", "#FDE725FF", "#FDE725FF", "#FDE725FF")) +
scale_shape_manual(values = c("Goal" = "diamond", "No_Goal" = "circle"), guide=FALSE) +
annotate("text", x = 102, y = 36, label = "Schuß mit hohem xG-Wert") +
annotate("text", x = 95, y = 41, label = "Tor") +
annotate("text", x = 77, y = 25, label = "Schuß mit niedrigem xG-Wert") +
theme(legend.position = c(0.8, 0.25), legend.key.size = unit(0.4, "cm"), legend.text=element_text(size = 12), legend.title = element_text(size = 16))
dummy_shots <- tibble(minute_ext = c(16, 42, 60, 85), team = c("team_a", "team_a", "team_b", "team_a"), cum_xg = c(0.2, 0.5, 0.1, 0.8), is_goal = c(0, 1, 0, 0))
end_time <- 90
dummy_shots <- dummy_shots %>%
add_row(minute_ext = 0, team = "team_a", cum_xg = 0, is_goal = 0, .before = 1) %>%
add_row(minute_ext = 0, team = "team_b", cum_xg = 0, is_goal = 0, .before = 1) %>%
add_row(minute_ext = end_time, team = "team_a", cum_xg = max(dummy_shots[dummy_shots$team == "team_a", ]$cum_xg), is_goal = 0) %>%
add_row(minute_ext = end_time, team = "team_b", cum_xg = max(dummy_shots[dummy_shots$team == "team_b", ]$cum_xg), is_goal = 0)
theme_set(theme_minimal())
ggplot(data = dummy_shots, aes(x = minute_ext, y = cum_xg, color = team)) +
geom_step() +
geom_point(data = dummy_shots[dummy_shots$is_goal==1,], aes(x = minute_ext, y = cum_xg, color = team)) +
scale_colour_manual(values = c("team_a" = "#ff0000", "team_b" = "#999999")) +
scale_x_continuous(breaks = seq(from = 0, to = end_time, by = 15)) +
geom_vline(xintercept = 45, linetype = "dotted", color = "gray", size = 0.5) +
labs(x = "Spielminute",
y = "kumulative xG",
title = glue::glue("xG-Entwicklung und Shotmaps: <b style = 'color:#ff0000'>Team A</b> - <b style = 'color:#999999'>Team B</b> (1 - 0)"),
subtitle = glue::glue("Finale WM 1966: Wembley (London), 30. Juli 1966, <b>xG: 0.8 - 0.1</b>")) +
theme(axis.title.x = element_blank(), axis.title.y = element_blank()) +
theme(legend.position = 'none', plot.title = element_markdown(), plot.subtitle = element_markdown())
dummy_shots <- tibble(minute_ext = c(16, 42, 60, 85), team = c("team_a", "team_a", "team_b", "team_a"), cum_xg = c(0.2, 0.5, 0.1, 0.8), is_goal = c(0, 1, 0, 0))
end_time <- 90
dummy_shots <- dummy_shots %>%
add_row(minute_ext = 0, team = "team_a", cum_xg = 0, is_goal = 0, .before = 1) %>%
add_row(minute_ext = 0, team = "team_b", cum_xg = 0, is_goal = 0, .before = 1) %>%
add_row(minute_ext = end_time, team = "team_a", cum_xg = max(dummy_shots[dummy_shots$team == "team_a", ]$cum_xg), is_goal = 0) %>%
add_row(minute_ext = end_time, team = "team_b", cum_xg = max(dummy_shots[dummy_shots$team == "team_b", ]$cum_xg), is_goal = 0)
theme_set(theme_minimal())
ggplot(data = dummy_shots, aes(x = minute_ext, y = cum_xg, color = team)) +
geom_step() +
geom_point(data = dummy_shots[dummy_shots$is_goal==1,], aes(x = minute_ext, y = cum_xg, color = team)) +
scale_colour_manual(values = c("team_a" = "#ff0000", "team_b" = "#999999")) +
scale_x_continuous(breaks = seq(from = 0, to = end_time, by = 15)) +
geom_vline(xintercept = 45, linetype = "dotted", color = "gray", size = 0.5) +
annotate("text", x = 38, y = 0.5, label = "Tor") +
annotate("text", x = 80, y = 0.7, label = "Torschuss") +
labs(x = "Spielminute",
y = "kumulative xG",
title = glue::glue("xG-Entwicklung und Shotmaps: <b style = 'color:#ff0000'>Team A</b> - <b style = 'color:#999999'>Team B</b> (1 - 0)"),
subtitle = glue::glue("Finale WM 1966: Wembley (London), 30. Juli 1966, <b>xG: 0.8 - 0.1</b>")) +
theme(axis.title.x = element_blank(), axis.title.y = element_blank()) +
theme(legend.position = 'none', plot.title = element_markdown(), plot.subtitle = element_markdown())
dummy_shots <- tibble(minute_ext = c(16, 42, 60, 85), team = c("team_a", "team_a", "team_b", "team_a"), cum_xg = c(0.2, 0.5, 0.1, 0.8), is_goal = c(0, 1, 0, 0))
end_time <- 90
dummy_shots <- dummy_shots %>%
add_row(minute_ext = 0, team = "team_a", cum_xg = 0, is_goal = 0, .before = 1) %>%
add_row(minute_ext = 0, team = "team_b", cum_xg = 0, is_goal = 0, .before = 1) %>%
add_row(minute_ext = end_time, team = "team_a", cum_xg = max(dummy_shots[dummy_shots$team == "team_a", ]$cum_xg), is_goal = 0) %>%
add_row(minute_ext = end_time, team = "team_b", cum_xg = max(dummy_shots[dummy_shots$team == "team_b", ]$cum_xg), is_goal = 0)
theme_set(theme_minimal())
ggplot(data = dummy_shots, aes(x = minute_ext, y = cum_xg, color = team)) +
geom_step() +
geom_point(data = dummy_shots[dummy_shots$is_goal==1,], aes(x = minute_ext, y = cum_xg, color = team)) +
scale_colour_manual(values = c("team_a" = "#ff0000", "team_b" = "#999999")) +
scale_x_continuous(breaks = seq(from = 0, to = end_time, by = 15)) +
geom_vline(xintercept = 45, linetype = "dotted", color = "gray", size = 0.5) +
annotate("text", x = 38, y = 0.5, label = "Tor") +
annotate("text", x = 78, y = 0.7, label = "Torschuss") +
labs(x = "Spielminute",
y = "kumulative xG",
title = glue::glue("xG-Entwicklung und Shotmaps: <b style = 'color:#ff0000'>Team A</b> - <b style = 'color:#999999'>Team B</b> (1 - 0)"),
subtitle = glue::glue("Finale WM 1966: Wembley (London), 30. Juli 1966, <b>xG: 0.8 - 0.1</b>")) +
theme(axis.title.x = element_blank(), axis.title.y = element_blank()) +
theme(legend.position = 'none', plot.title = element_markdown(), plot.subtitle = element_markdown())
blogdown:::serve_site()
dummy_shots <- tibble(location_x = c(100, 95, 80), location_y = c(34, 38, 27), xg = c(0.5, 0.2, 0.05), is_goal = c("No_Goal", "Goal", "No_Goal"))
plot_pitch(unit = "meters", theme = "light", type = "offensive_half", orientation = "vertical", direction_arrow = FALSE) +
geom_point(data = dummy_shots, aes(x = location_x, y = location_y, color = xg, shape = is_goal), size = 4) +
scale_color_gradientn("xG-Wert",
limits = c(0,1),
colours = c("grey15", "#440154FF", "#3B528BFF", "#3B528BFF", "#3B528BFF", "#21908CFF", "#21908CFF", "#21908CFF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#FDE725FF", "#FDE725FF", "#FDE725FF", "#FDE725FF", "#FDE725FF", "#FDE725FF")) +
scale_shape_manual(values = c("Goal" = "diamond", "No_Goal" = "circle"), guide=FALSE) +
annotate("text", x = 102, y = 36, label = "Schuss mit hohem xG-Wert") +
annotate("text", x = 95, y = 41, label = "Tor") +
annotate("text", x = 77, y = 25, label = "Schuss mit niedrigem xG-Wert") +
theme(legend.position = c(0.8, 0.25), legend.key.size = unit(0.4, "cm"), legend.text=element_text(size = 12), legend.title = element_text(size = 16))
dummy_shots <- tibble(location_x = c(100, 95, 80), location_y = c(34, 38, 27), xg = c(0.5, 0.2, 0.05), is_goal = c("No_Goal", "Goal", "No_Goal"))
plot_pitch(unit = "meters", theme = "light", type = "offensive_half", orientation = "vertical", direction_arrow = FALSE) +
geom_point(data = dummy_shots, aes(x = location_x, y = location_y, color = xg, shape = is_goal), size = 4) +
scale_color_gradientn("xG-Wert",
limits = c(0,1),
colours = c("grey15", "#440154FF", "#3B528BFF", "#3B528BFF", "#3B528BFF", "#21908CFF", "#21908CFF", "#21908CFF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#FDE725FF", "#FDE725FF", "#FDE725FF", "#FDE725FF", "#FDE725FF", "#FDE725FF")) +
scale_shape_manual(values = c("Goal" = "diamond", "No_Goal" = "circle"), guide=FALSE) +
annotate("text", x = 102, y = 38, label = "Schuss mit hohem xG-Wert") +
annotate("text", x = 95, y = 41, label = "Tor") +
annotate("text", x = 77, y = 25, label = "Schuss mit niedrigem xG-Wert") +
theme(legend.position = c(0.8, 0.25), legend.key.size = unit(0.4, "cm"), legend.text=element_text(size = 12), legend.title = element_text(size = 16))
dummy_shots <- tibble(location_x = c(100, 95, 80), location_y = c(34, 38, 27), xg = c(0.5, 0.2, 0.05), is_goal = c("No_Goal", "Goal", "No_Goal"))
plot_pitch(unit = "meters", theme = "light", type = "offensive_half", orientation = "vertical", direction_arrow = FALSE) +
geom_point(data = dummy_shots, aes(x = location_x, y = location_y, color = xg, shape = is_goal), size = 4) +
scale_color_gradientn("xG-Wert",
limits = c(0,1),
colours = c("grey15", "#440154FF", "#3B528BFF", "#3B528BFF", "#3B528BFF", "#21908CFF", "#21908CFF", "#21908CFF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#FDE725FF", "#FDE725FF", "#FDE725FF", "#FDE725FF", "#FDE725FF", "#FDE725FF")) +
scale_shape_manual(values = c("Goal" = "diamond", "No_Goal" = "circle"), guide=FALSE) +
annotate("text", x = 102, y = 40, label = "Schuss mit hohem xG-Wert") +
annotate("text", x = 95, y = 41, label = "Tor") +
annotate("text", x = 77, y = 25, label = "Schuss mit niedrigem xG-Wert") +
theme(legend.position = c(0.8, 0.25), legend.key.size = unit(0.4, "cm"), legend.text=element_text(size = 12), legend.title = element_text(size = 16))
dummy_shots <- tibble(location_x = c(100, 95, 80), location_y = c(34, 38, 27), xg = c(0.5, 0.2, 0.05), is_goal = c("No_Goal", "Goal", "No_Goal"))
plot_pitch(unit = "meters", theme = "light", type = "offensive_half", orientation = "vertical", direction_arrow = FALSE) +
geom_point(data = dummy_shots, aes(x = location_x, y = location_y, color = xg, shape = is_goal), size = 4) +
scale_color_gradientn("xG-Wert",
limits = c(0,1),
colours = c("grey15", "#440154FF", "#3B528BFF", "#3B528BFF", "#3B528BFF", "#21908CFF", "#21908CFF", "#21908CFF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#FDE725FF", "#FDE725FF", "#FDE725FF", "#FDE725FF", "#FDE725FF", "#FDE725FF")) +
scale_shape_manual(values = c("Goal" = "diamond", "No_Goal" = "circle"), guide=FALSE) +
annotate("text", x = 102, y = 36, label = "Schuss mit hohem xG-Wert") +
annotate("text", x = 95, y = 41, label = "Tor") +
annotate("text", x = 77, y = 25, label = "Schuss mit niedrigem xG-Wert") +
theme(legend.position = c(0.8, 0.25), legend.key.size = unit(0.4, "cm"), legend.text=element_text(size = 12), legend.title = element_text(size = 16))
dummy_shots <- tibble(location_x = c(100, 95, 80), location_y = c(34, 38, 27), xg = c(0.5, 0.2, 0.05), is_goal = c("No_Goal", "Goal", "No_Goal"))
plot_pitch(unit = "meters", theme = "light", type = "offensive_half", orientation = "vertical", direction_arrow = FALSE) +
geom_point(data = dummy_shots, aes(x = location_x, y = location_y, color = xg, shape = is_goal), size = 4) +
scale_color_gradientn("xG-Wert",
limits = c(0,1),
colours = c("grey15", "#440154FF", "#3B528BFF", "#3B528BFF", "#3B528BFF", "#21908CFF", "#21908CFF", "#21908CFF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#FDE725FF", "#FDE725FF", "#FDE725FF", "#FDE725FF", "#FDE725FF", "#FDE725FF")) +
scale_shape_manual(values = c("Goal" = "diamond", "No_Goal" = "circle"), guide=FALSE) +
annotate("text", x = 102, y = 32, label = "Schuss mit hohem xG-Wert") +
annotate("text", x = 95, y = 41, label = "Tor") +
annotate("text", x = 77, y = 25, label = "Schuss mit niedrigem xG-Wert") +
theme(legend.position = c(0.8, 0.25), legend.key.size = unit(0.4, "cm"), legend.text=element_text(size = 12), legend.title = element_text(size = 16))
dummy_shots <- tibble(location_x = c(100, 95, 80), location_y = c(34, 38, 27), xg = c(0.5, 0.2, 0.05), is_goal = c("No_Goal", "Goal", "No_Goal"))
plot_pitch(unit = "meters", theme = "light", type = "offensive_half", orientation = "vertical", direction_arrow = FALSE) +
geom_point(data = dummy_shots, aes(x = location_x, y = location_y, color = xg, shape = is_goal), size = 4) +
scale_color_gradientn("xG-Wert",
limits = c(0,1),
colours = c("grey15", "#440154FF", "#3B528BFF", "#3B528BFF", "#3B528BFF", "#21908CFF", "#21908CFF", "#21908CFF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#FDE725FF", "#FDE725FF", "#FDE725FF", "#FDE725FF", "#FDE725FF", "#FDE725FF")) +
scale_shape_manual(values = c("Goal" = "diamond", "No_Goal" = "circle"), guide=FALSE) +
annotate("text", x = 102, y = 30, label = "Schuss mit hohem xG-Wert") +
annotate("text", x = 95, y = 41, label = "Tor") +
annotate("text", x = 77, y = 25, label = "Schuss mit niedrigem xG-Wert") +
theme(legend.position = c(0.8, 0.25), legend.key.size = unit(0.4, "cm"), legend.text=element_text(size = 12), legend.title = element_text(size = 16))
dummy_shots <- tibble(location_x = c(100, 95, 80), location_y = c(34, 38, 27), xg = c(0.5, 0.2, 0.05), is_goal = c("No_Goal", "Goal", "No_Goal"))
plot_pitch(unit = "meters", theme = "light", type = "offensive_half", orientation = "vertical", direction_arrow = FALSE) +
geom_point(data = dummy_shots, aes(x = location_x, y = location_y, color = xg, shape = is_goal), size = 4) +
scale_color_gradientn("xG-Wert",
limits = c(0,1),
colours = c("grey15", "#440154FF", "#3B528BFF", "#3B528BFF", "#3B528BFF", "#21908CFF", "#21908CFF", "#21908CFF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#5DC863FF", "#FDE725FF", "#FDE725FF", "#FDE725FF", "#FDE725FF", "#FDE725FF", "#FDE725FF")) +
scale_shape_manual(values = c("Goal" = "diamond", "No_Goal" = "circle"), guide=FALSE) +
annotate("text", x = 102, y = 29, label = "Schuss mit hohem xG-Wert") +
annotate("text", x = 95, y = 41, label = "Tor") +
annotate("text", x = 77, y = 25, label = "Schuss mit niedrigem xG-Wert") +
theme(legend.position = c(0.8, 0.25), legend.key.size = unit(0.4, "cm"), legend.text=element_text(size = 12), legend.title = element_text(size = 16))
